The ``2-matrix_divided`` module
=================================

Testing ``matrix_divided`` function
-----------------------------------

[*] Import function from the module
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

[*] Module and function should have a doc
    >>> len(__import__('2-matrix_divided').__doc__) > 0
    True
    >>> len(matrix_divided.__doc__) > 0
    True

[*] Define a simple matrix
    >>> matrix = [
    ...  [1, 2, 3],
    ...  [4, 5, 6]
    ... ]

[*] Result should a matrix with each elements divided by div
- Passing in a matrix and a divisor
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

- Print the initial matrix
    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]

- Passing inf for divisor
    >>> print(matrix_divided(matrix, float('inf')))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

[*] Argument type check
[*] Matrix must be a list of lists of integers or floats
- Each row must be equally sized
    >>> print(matrix_divided([[1, 2], [4, 5, 6]], 2))
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

- Passing a tuple of tuple
    >>> print(matrix_divided(((2, "2"), (3, 5)), 2))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

- Passing a matrix with some string
    >>> print(matrix_divided([[2, "2"], [3, 5]], 2))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

- Passing a matrix with some boolean
    >>> print(matrix_divided([[False, 2], [3, 5]], 2))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

- Passing list with some empty elements list for matrix
    >>> print(matrix_divided([[], [3, 5]], 2))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

- Passing list with some empty elements list for matrix
    >>> print(matrix_divided([], 10))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

- Passing string for div
    >>> print(matrix_divided([[2, 2], [3, 5]], "2"))
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

- Passing zero for div
    >>> print(matrix_divided([[2, 2], [3, 5]], 0))
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

- Missing one argument
    >>> print(matrix_divided([[2, 2], [3, 5]]))
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

- Missing two arguments
    >>> print(matrix_divided())
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
